var searchIndex = JSON.parse('{\
"kani":{"doc":"","t":"CYCFFAFFCCFFOAXXAXCXAXACIKLNNDDEIFFLLLLLLLLLLLLLLKLLFLLLLLLLLLFDFFFLLLLLLLLLLLLFF","n":["Arbitrary","Arbitrary","RoundRobin","any","any_where","arbitrary","assert","assume","block_on","block_on_with_spawn","concrete_playback_run","cover","cover","futures","proof","should_panic","slice","solver","spawn","stub","tuple","unwind","vec","yield_now","Arbitrary","any","any_array","CanAssumeRunning","CannotAssumeRunning","JoinHandle","RoundRobin","SchedulingAssumption","SchedulingStrategy","block_on","block_on_with_spawn","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","default","from","from","from","into","into","into","into_future","pick_task","pick_task","poll","spawn","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","yield_now","AnySlice","any_slice","any_slice_of_array","any_slice_of_array_mut","borrow","borrow_mut","deref","deref_mut","drop","from","get_slice","get_slice_mut","into","try_from","try_into","type_id","any_vec","exact_vec"],"q":[[0,"kani"],[24,"kani::arbitrary"],[27,"kani::futures"],[63,"kani::slice"],[79,"kani::vec"]],"d":["","Kani proc macros must be in a separate crate Allow users …","","This creates an symbolic <em>valid</em> value of type <code>T</code>. You can …","This creates a symbolic <em>valid</em> value of type <code>T</code>. The value …","This module introduces the Arbitrary trait as well as …","Creates an assertion of the specified condition and …","Creates an assumption that will be valid after this …","","","NOP <code>concrete_playback</code> for type checking during …","Creates a cover property with the specified condition and …","A macro to check if a condition is satisfiable at a …","This module contains functions to work with futures (and …","Kani proc macros must be in a separate crate Marks a Kani …","Kani proc macros must be in a separate crate Specifies …","","Kani proc macros must be in a separate crate Select the …","","Kani proc macros must be in a separate crate Specify a …","Support for arbitrary tuples where each element implements …","Kani proc macros must be in a separate crate Set Loop …","","","This trait should be used to generate symbolic variables …","","","","","Result of spawning a task.","Keeps cycling through the tasks in a deterministic order","Indicates to the scheduler whether it can <code>kani::assume</code> …","Trait that determines the possible sequence of tasks …","A very simple executor: it polls the future in a busy loop …","Polls the given future and the tasks it may spawn until …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Picks the next task to be scheduled whenever the scheduler …","","","Spawns a task on the current global executor (which is set …","","","","","","","","","","Suspends execution of the current future, to allow the …","A struct that stores a slice of type <code>T</code> with a …","","Given an array <code>arr</code> of length <code>LENGTH</code>, this function returns …","A mutable version of the previous function","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","Generates an arbitrary vector whose length is at most …","Generates an arbitrary vector that is exactly EXACT_LENGTH …"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,22,22,0,0,0,0,0,0,22,14,12,22,14,12,12,22,14,12,22,14,12,14,11,12,14,0,22,14,12,22,14,12,22,14,12,0,0,0,0,0,20,20,20,20,20,20,20,20,20,20,20,20,0,0],"f":[0,0,0,[[],1],[2,1],0,[[3,4]],[3],0,0,[[[6,[[6,[5]]]],7]],[[3,4]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[],8],0,0,0,0,0,0,[9],[[[0,[9,10]],11]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[13],[[12,13]],[[[15,[14]],16],17],[[[0,[9,10]]],14],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],[[],9],0,[[],[[20,[1]]]],[8,21],[8,21],[[]],[[]],[20],[20],[20],[[]],[20,21],[20,21],[[]],[[],18],[[],18],[[],19],[[],[[6,[1]]]],[[],[[6,[1]]]]],"c":[],"p":[[8,"Arbitrary"],[8,"FnOnce"],[15,"bool"],[15,"str"],[15,"u8"],[3,"Vec"],[8,"Fn"],[15,"array"],[8,"Future"],[8,"Sync"],[8,"SchedulingStrategy"],[3,"RoundRobin"],[15,"usize"],[3,"JoinHandle"],[3,"Pin"],[3,"Context"],[4,"Poll"],[4,"Result"],[3,"TypeId"],[3,"AnySlice"],[15,"slice"],[4,"SchedulingAssumption"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
